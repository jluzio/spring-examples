spring.application.name: stream-kafka

logging:
  level:
    root: INFO
    com.example.spring: DEBUG

management.endpoints.web.exposure.include: health,info,bindings

spring:
  kafka:
    bootstrap-servers: &k-bootstrap-servers localhost:9093
  cloud:
    function:
#      definition: fizzBuzzProducer;fizzBuzzProcessor;fizzBuzzConsumer;pingSupplier;pingConsumer;randomNameSupplier|uppercaseFunction|reverseFunction;stringConsumer;unreliableDataSupplier;unreliableDataConsumer
      definition: fizzBuzzProducer;fizzBuzzProcessor;fizzBuzzConsumer;errorDlqProducer;errorDlqConsumer

    stream:
      # since we have several binders due to spring-cloud-stream-binder-kafka-streams
      default-binder: kafka
      kafka:
        binder:
          brokers: *k-bootstrap-servers
#          consumer-properties:
#            max.poll.records: 1
#        default.consumer:
#          enableDlq: true
#          dlqName: error-dlq-input-dlq
        bindings:
          errorDlqConsumer-in-0:
            consumer:
              enableDlq: true
              dlqName: error-dlq-input-dlq
              configuration:
                max.poll.records: 3
      bindings:
        # use 'group' to name the consumer group, alternatively it will be an anonymous consumer group
        fizzBuzzProducer-out-0:
          destination: numbers
        fizzBuzzProcessor-in-0:
          group: fizzBuzzProcessor
          destination: numbers
        fizzBuzzProcessor-out-0:
          destination: fizz-buzz
        fizzBuzzConsumer-in-0:
          group: fizzBuzzConsumer
          destination: fizz-buzz
        errorDlqConsumer-in-0:
          group: errorDlqConsumer
          destination: error-dlq-input
          consumer:
            # default maxAttempts: 3
            maxAttempts: 4
            # default backOffInitialInterval: 1000
            backOffInitialInterval: 1500
            # default backOffMaxInterval: 10000
            backOffMaxInterval: 11000
            # default backOffMultiplier: 2.0
            backOffMultiplier: 2.0
        errorDlqConsumer-out-0:
          destination: error-dlq-output
        errorDlqProducer-out-0:
          destination: error-dlq-input
#      function:
#        bindings:
#          fizzBuzzProducer-out-0: numbers
#          fizzBuzzProcessor-in-0: numbers
#          fizzBuzzProcessor-out-0: fizz-buzz
#          fizzBuzzConsumer-in-0: fizz-buzz

app:
  kafka-apps:
    fizzbuzz:
      enabled: true
      producers.enabled: false
    words:
      enabled: true
      producers.enabled: false
    error_dlq:
      enabled: true
      producers.enabled: false
